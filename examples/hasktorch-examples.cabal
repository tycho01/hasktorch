cabal-version: 2.2
-- * * * * * * * * * * * * WARNING * * * * * * * * * * * *
-- This file has been AUTO-GENERATED by dhall-to-cabal.
--
-- Do not edit it by hand, because your changes will be over-written!
--
-- Instead, edit the source Dhall file, namely
-- 'examples/hasktorch-examples.dhall', and re-generate this file by running
-- 'dhall-to-cabal -- examples/hasktorch-examples.dhall > hasktorch-examples.cabal'.
-- * * * * * * * * * * * * WARNING * * * * * * * * * * * *
name: hasktorch-examples
version: 0.0.1.0
license: BSD-3-Clause
author: Hasktorch dev team (Sam Stites, Austin Huang)
homepage: https://github.com/hasktorch/hasktorch#readme
bug-reports: https://github.com/hasktorch/hasktorch/issues
synopsis: Example usage
description:
    Example usage
category: Tensors, Machine Learning
build-type: Simple

source-repository head
    type: git
    location: https://github.com/hasktorch/hasktorch

flag cuda
    description:
        build with THC support
    default: False

flag debug
    description:
        turn on debugging flags
    default: False

executable gradient-descent
    main-is: GradientDescent.hs
    hs-source-dirs: gradient-descent
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2

executable multivariate-normal
    main-is: MultivariateNormal.hs
    hs-source-dirs: multivariate-normal
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2

executable lasso
    main-is: Lasso.hs
    hs-source-dirs: experimental/lasso
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2

executable ad
    main-is: AD.hs
    hs-source-dirs: experimental/ad
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2

executable bayesian-regression
    main-is: BayesianRegression.hs
    hs-source-dirs: experimental/bayesian-regression
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any
    else

executable download-mnist
    main-is: DownloadMNIST.hs
    hs-source-dirs: experimental/download-mnist
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2,
        HTTP -any,
        bytestring -any,
        cryptonite -any,
        directory -any,
        filepath -any,
        network-uri -any

executable ff-typed
    main-is: FeedForwardTyped.hs
    hs-source-dirs: experimental/ff-typed
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2

executable ff-untyped
    main-is: FeedForwardUntyped.hs
    hs-source-dirs: experimental/ff-untyped
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2

executable static-tensor-usage
    main-is: Main.hs
    hs-source-dirs: static-tensor-usage
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any
    else

executable lenet-cifar10
    main-is: Manual.hs
    hs-source-dirs: lenet-cifar10
    other-modules:
        DataLoading
        Criterion
        LeNet
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2,
        backprop ==0.2.5 || >0.2.5,
        hasktorch-zoo -any,
        unordered-containers -any,
        dlist -any,
        list-t -any,
        mtl -any,
        monad-loops -any,
        mwc-random -any,
        vector -any,
        time -any,
        transformers -any,
        safe-exceptions ==0.1.0.0 || >0.1.0.0
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any,
            hasktorch-raw-thc -any,
            hasktorch-types-thc -any
    else
    
    if flag(debug)
        cpp-options: -DDEBUG
    else

executable lenet-cifar10-initialization
    main-is: Initialization.hs
    hs-source-dirs: lenet-cifar10
    other-modules:
        Utils
        LeNet.Forward
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2,
        backprop ==0.2.5 || >0.2.5,
        hasktorch-zoo -any,
        unordered-containers -any,
        dlist -any,
        list-t -any,
        mtl -any,
        monad-loops -any,
        mwc-random -any,
        vector -any,
        time -any,
        transformers -any,
        safe-exceptions ==0.1.0.0 || >0.1.0.0
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any,
            hasktorch-raw-thc -any,
            hasktorch-types-thc -any
    else
    
    if flag(debug)
        cpp-options: -DDEBUG
    else

executable lenet-cifar10-trainonebatch
    main-is: TrainOneBatch.hs
    hs-source-dirs: lenet-cifar10
    other-modules:
        Utils
        LeNet.Forward
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2,
        backprop ==0.2.5 || >0.2.5,
        hasktorch-zoo -any,
        unordered-containers -any,
        dlist -any,
        list-t -any,
        mtl -any,
        monad-loops -any,
        mwc-random -any,
        vector -any,
        time -any,
        transformers -any,
        safe-exceptions ==0.1.0.0 || >0.1.0.0
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any,
            hasktorch-raw-thc -any,
            hasktorch-types-thc -any
    else
    
    if flag(debug)
        cpp-options: -DDEBUG
    else

executable dense3-cifar10
    main-is: Dense3CIFAR.hs
    hs-source-dirs: lenet-cifar10
    other-modules:
        Utils
        Dense3
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2,
        backprop ==0.2.5 || >0.2.5,
        hasktorch-zoo -any,
        unordered-containers -any,
        dlist -any,
        list-t -any,
        mtl -any,
        monad-loops -any,
        mwc-random -any,
        vector -any,
        time -any,
        transformers -any,
        safe-exceptions ==0.1.0.0 || >0.1.0.0
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any,
            hasktorch-raw-thc -any,
            hasktorch-types-thc -any
    else
    
    if flag(debug)
        cpp-options: -DDEBUG
    else

executable xor
    main-is: Main.hs
    hs-source-dirs: lenet-cifar10 xor
    other-modules:
        Utils
        Dense3
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch -any,
        microlens ==0.4.8.1 || >0.4.8.1,
        dimensions ==1.0 || >1.0,
        safe-exceptions ==0.1.0.0 || >0.1.0.0,
        singletons ==2.2 || >2.2,
        backprop ==0.2.5 || >0.2.5,
        hasktorch-zoo -any,
        unordered-containers -any,
        dlist -any,
        list-t -any,
        mtl -any,
        monad-loops -any,
        mwc-random -any,
        vector -any,
        time -any,
        transformers -any,
        safe-exceptions ==0.1.0.0 || >0.1.0.0
    
    if flag(cuda)
        cpp-options: -DCUDA
        build-depends:
            cuda -any,
            hasktorch-raw-thc -any,
            hasktorch-types-thc -any
    else
    
    if flag(debug)
        cpp-options: -DDEBUG
    else

