signature Torch.Sig.Mask.Tensor where

import Foreign.Ptr
import Foreign.C.Types
import Torch.Sig.Types.Global

c_newWithSize1d :: Ptr CState -> CLLong -> IO (Ptr CByteTensor)
c_newWithSize2d :: Ptr CState -> CLLong -> CLLong -> IO (Ptr CByteTensor)
c_newWithSize3d :: Ptr CState -> CLLong -> CLLong -> CLLong -> IO (Ptr CByteTensor)
c_newWithSize4d :: Ptr CState -> CLLong -> CLLong -> CLLong -> CLLong -> IO (Ptr CByteTensor)
c_set1d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CUChar -> IO ()
c_set2d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> CUChar -> IO ()
c_set3d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> CLLong -> CUChar -> IO ()
c_set4d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> CLLong -> CLLong -> CUChar -> IO ()
c_resize1d :: Ptr CState -> Ptr CByteTensor -> CLLong -> IO ()
c_resize2d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> IO ()
c_resize3d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> CLLong -> IO ()
c_resize4d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> CLLong -> CLLong -> IO ()
c_resize5d :: Ptr CState -> Ptr CByteTensor -> CLLong -> CLLong -> CLLong -> CLLong -> CLLong -> IO ()
c_nDimension :: Ptr CState -> Ptr CByteTensor -> IO CInt
c_size :: Ptr CState -> Ptr CByteTensor -> CInt -> IO CLLong

