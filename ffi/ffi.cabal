name:                ffi
version:             0.1.0.0
synopsis:            test out alternative options for ffi interface to libtorch 1.0
-- description:
homepage:            https://github.com/githubuser/ffi-experimental#readme
license:             BSD3
author:              Austin Huang
maintainer:          hasktorch@gmail.com
copyright:           2018 Austin Huang
category:            Codegen
build-type:          Simple
cabal-version:       >=1.10

library
 exposed-modules:     Aten.Type
                    , Aten.Const
                    , Aten.Cast
                    , Aten.Class
                    , Aten.Unmanaged.NN
                    , Aten.Unmanaged.TH
                    , Aten.Unmanaged.Native
                    , Aten.Unmanaged.Type.Tuple
                    , Aten.Unmanaged.Type.Generator
                    , Aten.Unmanaged.Type.IntArray
                    , Aten.Unmanaged.Type.Scalar
                    , Aten.Unmanaged.Type.SparseTensorRef
                    , Aten.Unmanaged.Type.Storage
                    , Aten.Unmanaged.Type.Tensor
                    , Aten.Unmanaged.Type.TensorList
                    , Aten.Unmanaged.Type.TensorOptions
                    , Aten.Unmanaged.Type.StdString
                    , Aten.Unmanaged.Type.StdArray
                    , Aten.Unmanaged.Type.Extra
                    , Aten.Managed.NN
                    , Aten.Managed.TH
                    , Aten.Managed.Native
                    , Aten.Managed.Type.Tuple
                    , Aten.Managed.Type.Generator
                    , Aten.Managed.Type.IntArray
                    , Aten.Managed.Type.Scalar
                    , Aten.Managed.Type.SparseTensorRef
                    , Aten.Managed.Type.Storage
                    , Aten.Managed.Type.Tensor
                    , Aten.Managed.Type.TensorList
                    , Aten.Managed.Type.TensorOptions
                    , Aten.Managed.Type.StdString
                    , Aten.Managed.Type.StdArray
                    , Aten.Managed.Type.Extra
 hs-source-dirs: src
 default-language: Haskell2010
 build-depends:       base >= 4.7 && < 5
                    , inline-c-cpp >= 0.3.0.1
                    , inline-c
                    , optparse-applicative >= 0.14.3.0
                    , containers
                    , template-haskell
                    , bytestring
 extra-libraries:     stdc++
                    , c10
                    , iomp5
                    , mklml
                    , caffe2
 ghc-options:       -optc-D_GLIBCXX_USE_CXX11_ABI=0
 cc-options:        -D_GLIBCXX_USE_CXX11_ABI=0
 cxx-options:       -D_GLIBCXX_USE_CXX11_ABI=0
 extensions:          Strict
                    , StrictData


executable ffi-test
  hs-source-dirs:      example
  main-is:             CppTest.hs
  default-language:    Haskell2010
  build-depends:       base >= 4.7 && < 5
                     , inline-c-cpp >= 0.3.0.1
                     , inline-c
                     , optparse-applicative >= 0.14.3.0
                     , containers
                     , ffi
  ghc-options:       -optc-D_GLIBCXX_USE_CXX11_ABI=0
  cc-options:        -D_GLIBCXX_USE_CXX11_ABI=0
  cxx-options:       -D_GLIBCXX_USE_CXX11_ABI=0
  extra-libraries:    torch
 extensions:          Strict
                    , StrictData

test-suite spec
  type:            exitcode-stdio-1.0
  hs-source-dirs:  test
  main-is:         Spec.hs
  other-modules:   BasicSpec
                 , MemorySpec
  default-language: Haskell2010
  build-depends:       base >= 4.7 && < 5
                     , inline-c-cpp >= 0.3.0.1
                     , inline-c
                     , optparse-applicative >= 0.14.3.0
                     , containers
                     , ffi
                     , hspec
  ghc-options:       -optc-D_GLIBCXX_USE_CXX11_ABI=0
  cc-options:        -D_GLIBCXX_USE_CXX11_ABI=0
  cxx-options:       -D_GLIBCXX_USE_CXX11_ABI=0
  extra-libraries:    torch
  extensions:          Strict
                     , StrictData
