machine:

  environment:
    PATH: ~/cmake-3.10.0-Linux-x86_64/bin/:~/.local/bin/:~/.cabal/bin/:/usr/local/bin:$PATH
    LD_LIBRARY_PATH: /home/ubuntu/hasktorch/vendor/build/:/usr/local/lib/:/usr/lib/x86_64-linux-gnu/
    C_INCLUDE_PATH: /usr/local/include
    LLVM_CONFIG: /usr/lib/llvm-3.8/bin/llvm-config

dependencies:

  cache_directories:
    - "/home/ubuntu/.stack"
    - "/home/ubuntu/.cabal"
    - "/home/ubuntu/cabal"
    - "/home/ubuntu/ghc-8.4.2"
    - "/home/ubuntu/cmake-3.10.0-Linux-x86_64"
    - "/usr/lib/llvm-4.0"
    - "/usr/local/bin/"
    - "/home/ubuntu/hasktorch/.stack-work"
    - "/home/ubuntu/hasktorch/vendor/build/"

  pre:
    - git submodule update --init --recursive

    # get llvm, cmake
    - wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-add-repository "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main"
    - sudo apt-get update --fix-missing
    - sudo apt-get install clang-4.0 lldb-4.0 --fix-missing
    - >
      if [ ! -d ~/cmake-3.10.0-Linux-x86_64 ]; then
        echo "No cache - building CMake"
        cd ~ && wget --no-check-certificate --quiet https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz && tar -xvf cmake-3.10.0-Linux-x86_64.tar.gz
      else
        echo "Cached CMake found"
      fi
    - which cmake
    - cmake --version

    # # Install stack
    # # =============
    # - mkdir -p ~/.local/bin
    # # full path to curl circumvents errors with /usr/local/bin/curl incompatabilities with libcurl
    # - /usr/bin/curl -L --retry 3 https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    # - stack upgrade
    # - stack update

    # Install GHC-8.4 on this build of Ubuntu (12.04)
    # =============
    - >
      if [ ! -d ~/ghc-8.4.2 ]; then
        echo "No cache - building GHC-8.4.2" ;
        cd ~ && wget --no-check-certificate --quiet https://downloads.haskell.org/~ghc/8.4.2/ghc-8.4.2-x86_64-deb8-linux.tar.xz && tar xf ghc-8.4.2-x86_64-deb8-linux.tar.xz ;
        cd ghc-8.4.2 ;
        ./configure ;
        sudo make install ;
        # could `sudo update-alternatives` instead
        sudo ln -fs /usr/local/bin/ghc-8.4.2         /usr/local/bin/ghc ;
        sudo ln -fs /usr/local/bin/ghci-8.4.2        /usr/local/bin/ghci ;
        sudo ln -fs /usr/local/bin/ghc-pkg-8.4.2     /usr/local/bin/ghc-pkg ;
        sudo ln -fs /usr/local/bin/haddock-ghc-8.4.2 /usr/local/bin/haddock-ghc ;
        sudo ln -fs /usr/local/bin/runghc-8.4.2      /usr/local/bin/runghc ;
      else
        echo "Cached ~/ghc-8.4.2 directory found" ;
      fi
    - which ghc
    - ghc --version

    # Get cabal-install head
    # =============
    - mkdir -p ~/.cabal/bin
    - >
      if [ ! -d ~/cabal ]; then
        echo "No cache - building cabal-install from git" ;
        sudo apt-get install cabal-install -y ;
        cabal update ;
        git clone git@github.com:haskell/cabal.git ~/cabal --recursive ;
        (cd ~/cabal && git checkout d6b829ddc77859e6b2b5d49bb249e9859b81248b) ;
        (cd ~/cabal/Cabal;         cabal install) ;
        (cd ~/cabal/cabal-install; cabal install) ;
      else
        echo "Cached ~/cabal found"
      fi
    - which cabal
    - cabal --version
    - cabal new-update
    - . setenv

    # Get haskell dependencies with our new cabal
    # =============
    - cabal install hspec-discover

    # Build ATen dependencies
    # =============
    - >
      if [ ! -f ${PWD}/vendor/build/libATen.so ]; then
        echo "No cached libATen.so - building" ;
        sudo pip install pyyaml typing ;
        pip install pyyaml typing ;
        cd ./vendor ;
        ./build-aten.sh ;
        sudo rm /usr/local/lib/libATen.so ;
        sudo cp /usr/local/lib/libATen.so{.1,} ;
        sed -i -e 's/\S*-- \(extra-lib-dirs:\)/\1 \/usr\/local\/lib/'         ~/.cabal/config
        sed -i -e 's/\S*-- \(extra-include-dirs:\)/\1 \/usr\/local\/include/' ~/.cabal/config
      else
        echo "Cached ${PWD}/vendor/build/libATen.so found"
      fi
    - ln -s ~/hasktorch/cabal.project.local{-example,}

  override:
    - cabal new-build all
    # --extra-include-dirs=/usr/local/include/ --extra-lib-dirs=/usr/local/lib/

test:
  override:
    - cabal new-test hasktorch-raw-th
    - cabal new-test hasktorch-core
    - cabal new-test hasktorch-codegen
    - >
      for l in TH THNN THC THCUNN; do
        for t in generic concrete; do
          cabal new-run hasktorch-codegen:ht-codegen -- --type ${t} --lib ${l} --verbose;
        done;
      done
    - >
      for example in ad bayesian-regression download-mnist ff-typed ff-untyped gradient-descent multivariate-normal static-tensor-usage; do
        echo "running ${example}" && cabal new-run hasktorch-examples:${example} ; #  --extra-include-dirs=/usr/local/include/ --extra-lib-dirs=/usr/local/lib/
      done ;
      echo "finished running examples"

