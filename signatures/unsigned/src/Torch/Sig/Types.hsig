{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE DataKinds #-}
signature Torch.Sig.Types where

import Foreign
import Foreign.Storable
import GHC.TypeLits (Nat)
import Torch.Sig.Types.Global as X

-- all C-types
data CTensor
data CStorage

-- freeStorage :: Ptr CState -> Ptr CStorage -> IO ()
-- freeTensor  :: Ptr CState -> Ptr CTensor -> IO ()

-- all haskell, memory-managed types
data DynTensor
asDyn :: ForeignPtr CTensor -> DynTensor
tensor :: DynTensor -> ForeignPtr CTensor

data Storage
asStorage :: ForeignPtr CStorage -> Storage
storage :: Storage -> ForeignPtr CStorage

data Tensor (d::[Nat])
asStatic :: DynTensor -> Tensor d
dynamic :: Tensor d -> DynTensor

data CReal
instance Num  CReal
instance Show CReal
instance Storable CReal

data CAccReal
instance Num  CAccReal
instance Show CAccReal
instance Storable CAccReal

data HsReal
instance Num  HsReal
instance Show HsReal

data HsAccReal
instance Num  HsAccReal
instance Show HsAccReal

hs2cReal :: HsReal -> CReal
hs2cAccReal :: HsAccReal -> CAccReal

c2hsReal :: CReal -> HsReal
c2hsAccReal :: CAccReal -> HsAccReal

